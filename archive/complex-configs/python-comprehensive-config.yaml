# Enhanced Python Repository LSP Validation Configuration
# Comprehensive configuration for Python LSP server testing with Django, Flask, and advanced Python patterns
# Optimized for python-lsp-server with full plugin support

name: "Python Comprehensive LSP Validation"
description: "Exhaustive LSP testing against real Python repositories with advanced configuration and comprehensive test scenarios"
version: "2.0"
timeout: 15m
parallel: true
tags: ["python", "comprehensive", "django", "flask", "advanced", "production"]

# Enhanced LSP server configurations
servers:
  pylsp:
    name: "python-lsp-server"
    language: "python"
    command: "pylsp"
    transport: "stdio"
    start_timeout: 45s
    shutdown_timeout: 15s
    pre_warmup: true
    initialize_delay: 3s
    warmup_requests: 5
    capabilities:
      - "textDocument/definition"
      - "textDocument/references"
      - "textDocument/hover"
      - "textDocument/documentSymbol"
      - "workspace/symbol"
      - "textDocument/completion"
      - "textDocument/diagnostics"
      - "textDocument/formatting"
      - "textDocument/codeAction"
    init_options:
      plugins:
        # Core plugins
        jedi_completion:
          enabled: true
          include_params: true
          include_class_objects: true
          include_function_objects: true
          fuzzy: true
        jedi_definition:
          enabled: true
          follow_imports: true
          follow_builtin_imports: true
        jedi_hover:
          enabled: true
        jedi_references:
          enabled: true
        jedi_signature_help:
          enabled: true
        jedi_symbols:
          enabled: true
          all_scopes: true
          include_import_symbols: true
        
        # Linting and formatting plugins
        flake8:
          enabled: true
          ignore: ["E501", "W503", "E203"]
          maxLineLength: 120
          per-file-ignores:
            - "__init__.py:F401,F403"
        mypy:
          enabled: true
          live_mode: false
          strict: false
        pylsp_mypy:
          enabled: true
          overrides: ["--ignore-missing-imports", "--follow-imports=silent"]
        pycodestyle:
          enabled: true
          ignore: ["E501", "W503", "E203"]
          maxLineLength: 120
        pydocstyle:
          enabled: false  # Can be noisy in large codebases
        pylint:
          enabled: false  # Too slow for real-time LSP
        rope_completion:
          enabled: true
        rope_autoimport:
          enabled: true
          memory: true
        
        # Formatting plugins
        yapf:
          enabled: false  # Conflicts with black
        black:
          enabled: true
          line_length: 120
        isort:
          enabled: true
          profile: "black"
          
    settings:
      # Python-specific settings
      python:
        analysis:
          typeCheckingMode: "basic"
          autoSearchPaths: true
          autoImportCompletions: true
          diagnosticMode: "workspace"
        formatting:
          provider: "black"
        linting:
          enabled: true
          flake8Enabled: true
          mypyEnabled: true
          
  # Alternative Python LSP server for comparison
  pyright:
    name: "pyright-langserver"
    language: "python"
    command: "pyright-langserver"
    args: ["--stdio"]
    transport: "stdio"
    start_timeout: 30s
    shutdown_timeout: 10s
    pre_warmup: false
    skip: true  # Skip by default, enable for comparison
    capabilities:
      - "textDocument/definition"
      - "textDocument/references"
      - "textDocument/hover"
      - "textDocument/documentSymbol"
      - "workspace/symbol"
      - "textDocument/completion"
      - "textDocument/diagnostics"
    init_options:
      python:
        analysis:
          typeCheckingMode: "strict"
          autoSearchPaths: true
          autoImportCompletions: true
          diagnosticMode: "openFilesOnly"

# Enhanced repository configurations
repositories:
  # Primary Django repository with comprehensive setup
  - name: "django-comprehensive"
    path: "./test-repositories/python/django"
    language: "python"
    description: "Django web framework repository with comprehensive LSP testing"
    priority: "high"
    setup:
      pre_commands:
        - "rm -rf venv .venv || true"
        - "python3 --version"
        - "which python3"
      commands:
        - "python3 -m venv venv"
        - "source venv/bin/activate && python --version"
        - "source venv/bin/activate && python -m pip install --upgrade pip setuptools wheel"
        - "source venv/bin/activate && python -m pip install -e ."
        - "source venv/bin/activate && python -m pip install -r tests/requirements/py3.txt || true"
        - "source venv/bin/activate && python -m pip install 'python-lsp-server[all]'"
        - "source venv/bin/activate && python -m pip install pylsp-mypy flake8 black isort rope"
        - "source venv/bin/activate && python -m pip install django-stubs mypy-extensions"
        - "source venv/bin/activate && python -c 'import django; print(f\"Django {django.get_version()} installed successfully\")'"
      timeout: 20m
      env:
        DJANGO_SETTINGS_MODULE: "django.conf.global_settings"
        PYTHONPATH: "."
        PYLSP_LOG_LEVEL: "DEBUG"
      validation:
        required_files: ["django/__init__.py", "setup.py"]
        required_dirs: ["django/db", "django/contrib", "django/core"]
        python_import_test: "import django; django.setup()"
    test_cases:
      # Enhanced definition tests
      - id: "django_def_model_inheritance"
        name: "Django Model Inheritance Definition"
        method: "textDocument/definition"
        file: "django/contrib/auth/models.py"
        position:
          line: 321  # AbstractUser class
          character: 15
        expected:
          success: true
          definition:
            has_location: true
            file_pattern: "django/contrib/auth/base_user.py"
        tags: ["definition", "django", "model", "inheritance"]
        timeout: 45s

      - id: "django_def_metaclass_navigation"
        name: "Django Metaclass Navigation"
        method: "textDocument/definition"
        file: "django/db/models/base.py"
        position:
          line: 78  # ModelBase metaclass
          character: 15
        expected:
          success: true
          definition:
            has_location: true
        tags: ["definition", "django", "metaclass", "advanced"]
        timeout: 45s

      - id: "django_def_field_descriptor"
        name: "Django Field Descriptor Definition"
        method: "textDocument/definition"
        file: "django/db/models/fields/__init__.py"
        position:
          line: 450  # Field descriptor
          character: 12
        expected:
          success: true
          definition:
            has_location: true
        tags: ["definition", "django", "descriptor", "field"]
        timeout: 45s

      # Enhanced reference tests
      - id: "django_ref_user_model_usage"
        name: "Django User Model Reference Usage"
        method: "textDocument/references"
        file: "django/contrib/auth/models.py"
        position:
          line: 321  # AbstractUser class
          character: 15
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 50  # User model is extensively referenced
            include_declaration: true
        tags: ["references", "django", "model", "user"]
        timeout: 60s

      - id: "django_ref_orm_save_method"
        name: "Django ORM Save Method References"
        method: "textDocument/references"
        file: "django/db/models/base.py"
        position:
          line: 753  # save method
          character: 12
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 30  # save() is widely used
            include_declaration: true
        tags: ["references", "django", "orm", "save"]
        timeout: 60s

      # Enhanced hover tests
      - id: "django_hover_model_field_detailed"
        name: "Django Model Field Detailed Hover"
        method: "textDocument/hover"
        file: "django/contrib/auth/models.py"
        position:
          line: 330  # username field
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["CharField", "max_length", "unique"]
            format: "markdown"
        tags: ["hover", "django", "model", "field"]
        timeout: 40s

      - id: "django_hover_queryset_method"
        name: "Django QuerySet Method Hover"
        method: "textDocument/hover"
        file: "django/db/models/query.py"
        position:
          line: 925  # filter method
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["filter", "QuerySet", "kwargs"]
            format: "markdown"
        tags: ["hover", "django", "queryset", "method"]
        timeout: 40s

      # Enhanced document symbols
      - id: "django_docsym_auth_models"
        name: "Django Auth Models Document Symbols"
        method: "textDocument/documentSymbol"
        file: "django/contrib/auth/models.py"
        expected:
          success: true
          symbols:
            min_count: 30  # Models, managers, methods
            types: ["class", "function", "variable", "property"]
        tags: ["symbols", "document", "django", "auth"]
        timeout: 60s

      - id: "django_docsym_admin_options"
        name: "Django Admin Options Document Symbols"
        method: "textDocument/documentSymbol"
        file: "django/contrib/admin/options.py"
        expected:
          success: true
          symbols:
            min_count: 40  # Admin classes and methods
            types: ["class", "function", "variable", "property"]
        tags: ["symbols", "document", "django", "admin"]
        timeout: 60s

      # Enhanced workspace symbols
      - id: "django_worksym_model_search"
        name: "Django Model Workspace Symbol Search"
        method: "workspace/symbol"
        params:
          query: "Model"
        expected:
          success: true
          symbols:
            min_count: 80  # Extensive model usage
            types: ["class", "function", "variable"]
        tags: ["symbols", "workspace", "django", "model"]
        timeout: 120s

      - id: "django_worksym_view_search"
        name: "Django View Workspace Symbol Search"
        method: "workspace/symbol"
        params:
          query: "View"
        expected:
          success: true
          symbols:
            min_count: 25
            types: ["class", "function"]
        tags: ["symbols", "workspace", "django", "view"]
        timeout: 120s

  # Flask repository with comprehensive setup
  - name: "flask-comprehensive"
    path: "./test-repositories/python/flask"
    language: "python"
    description: "Flask micro web framework repository with comprehensive LSP testing"
    priority: "high"
    setup:
      pre_commands:
        - "rm -rf venv .venv || true"
        - "python3 --version"
      commands:
        - "python3 -m venv venv"
        - "source venv/bin/activate && python --version"
        - "source venv/bin/activate && python -m pip install --upgrade pip setuptools wheel"
        - "source venv/bin/activate && python -m pip install -e ."
        - "source venv/bin/activate && python -m pip install -r requirements/dev.txt || true"
        - "source venv/bin/activate && python -m pip install 'python-lsp-server[all]'"
        - "source venv/bin/activate && python -m pip install pylsp-mypy flake8 black isort rope"
        - "source venv/bin/activate && python -c 'import flask; print(f\"Flask {flask.__version__} installed successfully\")'"
      timeout: 15m
      env:
        FLASK_APP: "src/flask"
        PYTHONPATH: "src"
        PYLSP_LOG_LEVEL: "DEBUG"
      validation:
        required_files: ["src/flask/__init__.py", "setup.py"]
        required_dirs: ["src/flask", "tests"]
        python_import_test: "import flask"
    test_cases:
      # Flask-specific definition tests
      - id: "flask_def_app_class"
        name: "Flask App Class Definition"
        method: "textDocument/definition"
        file: "src/flask/app.py"
        position:
          line: 275  # Flask class
          character: 15
        expected:
          success: true
          definition:
            has_location: true
        tags: ["definition", "flask", "app", "class"]
        timeout: 45s

      - id: "flask_def_blueprint_registration"
        name: "Flask Blueprint Registration Definition"
        method: "textDocument/definition"
        file: "src/flask/blueprints.py"
        position:
          line: 410  # Blueprint.register
          character: 15
        expected:
          success: true
          definition:
            has_location: true
        tags: ["definition", "flask", "blueprint", "registration"]
        timeout: 45s

      # Flask-specific reference tests
      - id: "flask_ref_app_instance"
        name: "Flask App Instance References"
        method: "textDocument/references"
        file: "src/flask/app.py"
        position:
          line: 275  # Flask class constructor
          character: 15
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 20
            include_declaration: true
        tags: ["references", "flask", "app", "instance"]
        timeout: 60s

      - id: "flask_ref_route_decorator"
        name: "Flask Route Decorator References"
        method: "textDocument/references"
        file: "src/flask/app.py"
        position:
          line: 1380  # route method
          character: 12
        params:
          includeDeclaration: false
        expected:
          success: true
          references:
            min_count: 10
            include_declaration: false
        tags: ["references", "flask", "route", "decorator"]
        timeout: 60s

      # Flask-specific hover tests
      - id: "flask_hover_app_config"
        name: "Flask App Configuration Hover"
        method: "textDocument/hover"
        file: "src/flask/app.py"
        position:
          line: 320  # Flask.config
          character: 25
        expected:
          success: true
          hover:
            has_content: true
            contains: ["config", "Config", "dict"]
            format: "markdown"
        tags: ["hover", "flask", "config", "app"]
        timeout: 40s

      - id: "flask_hover_request_context"
        name: "Flask Request Context Hover"
        method: "textDocument/hover"
        file: "src/flask/ctx.py"
        position:
          line: 245  # RequestContext
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["RequestContext", "request", "context"]
            format: "markdown"
        tags: ["hover", "flask", "request", "context"]
        timeout: 40s

      # Flask-specific document symbols
      - id: "flask_docsym_app_core"
        name: "Flask App Core Document Symbols"
        method: "textDocument/documentSymbol"
        file: "src/flask/app.py"
        expected:
          success: true
          symbols:
            min_count: 60  # Flask class has many methods
            types: ["class", "function", "variable", "property"]
        tags: ["symbols", "document", "flask", "app"]
        timeout: 60s

      - id: "flask_docsym_blueprints"
        name: "Flask Blueprints Document Symbols"
        method: "textDocument/documentSymbol"
        file: "src/flask/blueprints.py"
        expected:
          success: true
          symbols:
            min_count: 25
            types: ["class", "function", "variable"]
        tags: ["symbols", "document", "flask", "blueprints"]
        timeout: 60s

      # Flask-specific workspace symbols
      - id: "flask_worksym_route_search"
        name: "Flask Route Workspace Symbol Search"
        method: "workspace/symbol"
        params:
          query: "route"
        expected:
          success: true
          symbols:
            min_count: 10
            types: ["function", "variable"]
        tags: ["symbols", "workspace", "flask", "route"]
        timeout: 120s

      - id: "flask_worksym_blueprint_search"
        name: "Flask Blueprint Workspace Symbol Search"
        method: "workspace/symbol"
        params:
          query: "Blueprint"
        expected:
          success: true
          symbols:
            min_count: 5
            types: ["class", "function", "variable"]
        tags: ["symbols", "workspace", "flask", "blueprint"]
        timeout: 120s

  # Additional Python utility repository for testing edge cases
  - name: "python-requests"
    path: "./test-repositories/python/requests"
    language: "python"
    description: "Python Requests library for testing HTTP client patterns"
    priority: "medium"
    skip: false
    setup:
      commands:
        - "python3 -m venv venv"
        - "source venv/bin/activate && python -m pip install --upgrade pip"
        - "source venv/bin/activate && python -m pip install -e ."
        - "source venv/bin/activate && python -m pip install 'python-lsp-server[all]'"
        - "source venv/bin/activate && python -m pip install pylsp-mypy flake8 black isort"
      timeout: 10m
      env:
        PYTHONPATH: "."
    test_cases:
      # Requests library specific tests
      - id: "requests_def_session_class"
        name: "Requests Session Class Definition"
        method: "textDocument/definition"
        file: "requests/sessions.py"
        position:
          line: 280  # Session class
          character: 10
        expected:
          success: true
          definition:
            has_location: true
        tags: ["definition", "requests", "session", "class"]
        timeout: 45s

      - id: "requests_ref_get_method"
        name: "Requests GET Method References"
        method: "textDocument/references"
        file: "requests/sessions.py"
        position:
          line: 550  # get method
          character: 12
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 5
            include_declaration: true
        tags: ["references", "requests", "get", "method"]
        timeout: 60s

# Enhanced execution configuration
execution:
  max_concurrency: 3  # Balanced for resource management
  default_timeout: 90s
  long_timeout: 180s  # For complex operations
  retry_attempts: 3
  retry_delay: 3s
  fail_fast: false
  randomize_order: false
  keep_servers_alive: true
  server_warmup_time: 15s
  test_isolation: false  # Share server instances for performance

# Enhanced validation configuration
validation:
  strict_mode: false  # Allow for Python's dynamic nature
  validate_types: true
  validate_positions: true
  validate_uris: true
  validate_content: true
  python_specific_validation: true
  django_pattern_validation: true
  flask_pattern_validation: true
  metaclass_validation: true
  descriptor_validation: true
  inheritance_validation: true

# Enhanced reporting configuration
reporting:
  formats: ["console", "json", "junit", "html"]
  output_dir: "repo-validation-python-comprehensive"
  verbose: true
  include_timing: true
  include_server_logs: true
  save_details: true
  performance_metrics: true
  python_specific_metrics: true
  django_metrics: true
  flask_metrics: true
  complexity_analysis: true
  inheritance_analysis: true
  symbol_resolution_paths: true

# Python-specific environment configuration
environment:
  python_version: "3.11"
  virtual_env: true
  pip_cache: true
  compile_bytecode: false
  environment_variables:
    PYTHONPATH: "."
    PYTHONDONTWRITEBYTECODE: "1"
    PYTHONUNBUFFERED: "1"
    PYLSP_LOG_LEVEL: "DEBUG"
    PYLSP_CACHE_SIZE: "1000"
    DJANGO_SETTINGS_MODULE: "django.conf.global_settings"
    FLASK_ENV: "development"

# Advanced Python LSP configuration
lsp_advanced_config:
  symbol_indexing:
    enabled: true
    index_builtin_modules: true
    index_site_packages: false  # Too slow for large environments
    incremental_indexing: true
    
  performance_tuning:
    max_workers: 4
    cache_size: 2000
    completion_resolve_timeout: 10000
    hover_timeout: 8000
    definition_timeout: 10000
    references_timeout: 15000
    symbol_timeout: 20000
    
  diagnostic_configuration:
    enable_diagnostics: true
    diagnostic_delay: 1000
    max_diagnostics_per_file: 50
    publish_diagnostics: true
    
  completion_configuration:
    enable_completions: true
    completion_trigger_characters: [".", "(", "["]
    max_completion_items: 100
    resolve_completion_items: true

# Test data and fixture configuration
test_data:
  use_real_repositories: true
  generate_synthetic_tests: false
  preserve_test_data: true
  cleanup_on_completion: false
  
# Monitoring and health checks
monitoring:
  health_check_interval: 30s
  memory_monitoring: true
  performance_monitoring: true
  log_level: "INFO"
  enable_metrics: true
  
# Cleanup configuration
cleanup:
  cleanup_on_success: false
  cleanup_on_failure: false
  preserve_logs: true
  preserve_server_state: true
  cleanup_timeout: 60s