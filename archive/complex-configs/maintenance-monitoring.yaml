# LSP Gateway Test Environment Monitoring Configuration
# Automated monitoring and alerting for maintenance procedures

monitoring:
  # Health check configuration
  health_checks:
    enabled: true
    interval: "6h"  # Run every 6 hours
    timeout: "5m"
    quick_mode: false  # Include LSP validation tests
    
  # Repository monitoring
  repositories:
    check_interval: "24h"  # Daily repository status check
    clone_timeout: "30m"
    validate_commits: true
    check_accessibility: true
    
  # Performance monitoring
  performance:
    baseline_file: "./performance-baselines.json"
    regression_threshold: 15  # Percent increase that triggers alert
    memory_limit_mb: 512
    latency_threshold_ms: 1000
    
  # Infrastructure monitoring
  infrastructure:
    go_version_check: true
    lsp_server_versions: true
    disk_space_minimum_gb: 5
    memory_usage_threshold: 80  # Percent

# Alerting configuration
alerts:
  # Alert destinations
  destinations:
    - type: "log"
      path: "./health-alerts.log"
      enabled: true
    
    - type: "email"
      enabled: false
      smtp_server: "smtp.company.com"
      port: 587
      username: "alerts@company.com"
      password: "${SMTP_PASSWORD}"
      recipients: ["team@company.com"]
      
    - type: "slack"
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#lsp-gateway-alerts"
      
    - type: "webhook"
      enabled: false
      url: "${MONITORING_WEBHOOK_URL}"
      headers:
        Authorization: "Bearer ${WEBHOOK_TOKEN}"
  
  # Alert severity levels
  severity_levels:
    critical:
      conditions:
        - "health_check_failures >= 3"
        - "lsp_server_unavailable"
        - "repository_clone_failure_rate >= 50"
        - "disk_space_below_minimum"
      response_time: "immediate"
      
    warning:
      conditions:
        - "health_check_failures >= 1"
        - "performance_regression >= 15"
        - "repository_validation_failures >= 25"
        - "memory_usage_high"
      response_time: "24h"
      
    info:
      conditions:
        - "repository_updates_available"
        - "lsp_server_updates_available"
        - "minor_performance_changes"
      response_time: "weekly"

# Maintenance schedules
schedules:
  # Automated maintenance tasks
  tasks:
    - name: "health_check"
      script: "./scripts/health-check.sh"
      cron: "0 */6 * * *"  # Every 6 hours
      timeout: "5m"
      alert_on_failure: true
      
    - name: "repository_status"
      script: "./scripts/clone-repos.sh status"
      cron: "0 1 * * *"  # Daily at 1 AM
      timeout: "10m"
      alert_on_failure: false
      
    - name: "weekly_validation"
      script: "./scripts/run-lsp-validation-tests.sh full"
      cron: "0 2 * * 1"  # Monday at 2 AM
      timeout: "30m"
      alert_on_failure: true
      
    - name: "monthly_update_check"
      script: "./scripts/update-commit-hashes.sh validate"
      cron: "0 3 1 * *"  # 1st of month at 3 AM
      timeout: "15m"
      alert_on_failure: false
      
    - name: "quarterly_update"
      script: "./scripts/update-commit-hashes.sh --non-interactive"
      cron: "0 4 1 3,6,9,12 *"  # Quarterly on 1st at 4 AM
      timeout: "60m"
      alert_on_failure: true
      manual_approval: true  # Requires manual confirmation

# Backup configuration
backups:
  enabled: true
  retention_days: 90
  locations:
    - type: "local"
      path: "./.maintenance-backups"
      enabled: true
      
    - type: "s3"
      bucket: "${BACKUP_S3_BUCKET}"
      prefix: "lsp-gateway-backups/"
      enabled: false
      
  files:
    - "test-repositories.yaml"
    - "config.yaml"
    - "scripts/"
    - "test-configs/"

# Performance baselines
performance_baselines:
  # Expected performance metrics (updated quarterly)
  lsp_validation:
    go:
      definition_latency_ms: 150
      hover_latency_ms: 100
      references_latency_ms: 200
      symbols_latency_ms: 300
      
    python:
      definition_latency_ms: 200
      hover_latency_ms: 150
      references_latency_ms: 250
      symbols_latency_ms: 400
      
    typescript:
      definition_latency_ms: 180
      hover_latency_ms: 120
      references_latency_ms: 220
      symbols_latency_ms: 350
      
  repository_operations:
    clone_time_minutes:
      kubernetes: 15
      golang: 8
      django: 5
      flask: 2
      vscode: 12
      typescript: 6
      spring-boot: 8
      kafka: 6
      
    validation_time_seconds:
      per_repository: 30
      full_suite: 300

# Maintenance windows
maintenance_windows:
  # Scheduled maintenance periods
  quarterly:
    months: [3, 6, 9, 12]  # March, June, September, December
    day: 1  # First Monday of the month
    start_time: "02:00"
    duration_hours: 4
    timezone: "UTC"
    
  emergency:
    max_downtime_minutes: 30
    rollback_timeout_minutes: 15
    notification_required: true

# Reporting configuration  
reporting:
  # Automated reporting
  enabled: true
  formats: ["json", "html", "text"]
  output_directory: "./maintenance-reports"
  
  # Report schedules
  schedules:
    daily:
      enabled: true
      content: ["health_status", "repository_status"]
      recipients: ["team@company.com"]
      
    weekly:
      enabled: true  
      content: ["performance_summary", "validation_results", "error_analysis"]
      recipients: ["team@company.com", "management@company.com"]
      
    monthly:
      enabled: true
      content: ["full_system_report", "maintenance_summary", "recommendations"]
      recipients: ["team@company.com", "management@company.com"]
      
    quarterly:
      enabled: true
      content: ["comprehensive_analysis", "performance_trends", "improvement_plan"]
      recipients: ["team@company.com", "management@company.com", "architecture@company.com"]

# Integration configuration
integrations:
  # CI/CD system integration
  ci_cd:
    jenkins:
      enabled: false
      webhook_url: "${JENKINS_WEBHOOK_URL}"
      
    github_actions:
      enabled: false
      token: "${GITHUB_TOKEN}"
      
    gitlab_ci:
      enabled: false
      token: "${GITLAB_TOKEN}"
      
  # Monitoring system integration
  monitoring_systems:
    prometheus:
      enabled: false
      pushgateway_url: "${PROMETHEUS_PUSHGATEWAY_URL}"
      metrics_prefix: "lsp_gateway_"
      
    grafana:
      enabled: false
      dashboard_url: "${GRAFANA_DASHBOARD_URL}"
      
    datadog:
      enabled: false
      api_key: "${DATADOG_API_KEY}"
      
  # Issue tracking
  issue_tracking:
    jira:
      enabled: false
      url: "${JIRA_URL}"
      project_key: "LSPGW"
      username: "${JIRA_USERNAME}"
      token: "${JIRA_TOKEN}"
      
    github_issues:
      enabled: false
      repository: "owner/lsp-gateway"
      token: "${GITHUB_TOKEN}"

# Security configuration
security:
  # Credential management
  credentials:
    encryption_enabled: true
    key_rotation_days: 90
    storage_location: "./.secrets"
    
  # Access control
  access_control:
    maintenance_users: ["admin", "maintainer"]
    read_only_users: ["developer", "observer"]
    audit_log: "./maintenance-audit.log"
    
  # Vulnerability scanning
  vulnerability_scanning:
    enabled: false
    schedule: "weekly"
    tools: ["snyk", "trivy"]
    
# Environment-specific overrides
environments:
  development:
    monitoring:
      health_checks:
        interval: "1h"
    alerts:
      severity_levels:
        critical:
          response_time: "4h"
          
  staging:
    monitoring:
      health_checks:
        interval: "2h"
    alerts:
      severity_levels:
        critical:
          response_time: "2h"
          
  production:
    monitoring:
      health_checks:
        interval: "6h"
    alerts:
      severity_levels:
        critical:
          response_time: "immediate"