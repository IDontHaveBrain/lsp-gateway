# Go Comprehensive LSP Test Configuration
# Optimized gopls server configuration for comprehensive Go language testing
# Updated for gopls latest features and Go 1.24.5 compatibility

name: "Go Comprehensive LSP Test Configuration"
description: "Comprehensive LSP testing configuration optimized for Go with gopls server"
version: "2.0"
updated: "2025-07-22"
timeout: 45m
parallel: true
tags: ["comprehensive", "go", "gopls", "production-ready"]

# Gopls server configuration with latest features
servers:
  gopls:
    name: "gopls"
    language: "go"
    command: "gopls"
    transport: "stdio"
    start_timeout: 45s
    shutdown_timeout: 15s
    pre_warmup: true
    initialize_delay: 3s
    restart_on_crash: true
    max_restarts: 3
    
    # Comprehensive initialization options for gopls
    init_options:
      # Completion settings
      completeUnimported: true
      completionDocumentation: true
      deepCompletion: true
      matcher: "fuzzy"
      completionBudget: "500ms"
      
      # Inlay hints configuration
      hints:
        assignVariableTypes: true
        compositeLiteralFields: true
        compositeLiteralTypes: true
        constantValues: true
        functionTypeParameters: true
        parameterNames: true
        rangeVariableTypes: true
        
      # Code lens configuration
      codelenses:
        generate: true
        test: true
        tidy: true
        upgrade_dependency: true
        vendor: true
        run_govulncheck: true
        
      # UI preferences
      ui:
        inlayHint:
          hints:
            assignVariableTypes: true
            compositeLiteralFields: true
            compositeLiteralTypes: true
            constantValues: true
            functionTypeParameters: true
            parameterNames: true
            rangeVariableTypes: true
        codelenses:
          generate: true
          test: true
          run_govulncheck: true
          tidy: true
          upgrade_dependency: true
          vendor: true
        diagnostic:
          analyses:
            unreachable: true
            unusedvariable: true
            unusedwrite: true
            useany: true
            fillstruct: true
            nonewvars: true
            noresultvalues: true
            undeclaredname: true
            unusedparams: true
          staticcheck: true
          
      # Analysis configuration
      analyses:
        # Enable comprehensive static analysis
        asmdecl: true
        assign: true
        atomic: true
        atomicalign: true
        bools: true
        buildtag: true
        cgocall: true
        composite: true
        copylock: true
        deepequalerrors: true
        errorsas: true
        fieldalignment: false  # Can be noisy
        fillstruct: true
        httpresponse: true
        ifaceassert: true
        loopclosure: true
        lostcancel: true
        nilfunc: true
        nilness: true
        nonewvars: true
        noresultvalues: true
        printf: true
        shadow: true
        shift: true
        simplifycompositelit: true
        simplifyrange: true
        simplifyslice: true
        sortslice: true
        stdmethods: true
        structtag: true
        tests: true
        timeformat: true
        undeclaredname: true
        unreachable: true
        unsafeptr: true
        unusedparams: true
        unusedresult: true
        unusedvariable: true
        unusedwrite: true
        useany: true
        
      # Formatting configuration
      gofumpt: true
      local: ""
      
      # Build configuration
      buildFlags: ["-tags=integration,e2e"]
      env:
        CGO_ENABLED: "0"
        GOPROXY: "https://proxy.golang.org,direct"
        GOSUMDB: "sum.golang.org"
        GONOSUMDB: ""
        GOPRIVATE: ""
        
      # Diagnostic settings
      diagnosticsDelay: "1s"
      diagnosticsTrigger: "Edit"
      annotationFilter: []
      staticcheck: true
      symbolMatcher: "fuzzy"
      symbolStyle: "Dynamic"
      
      # Advanced features
      vulncheck: "Imports"
      templateExtensions: []
      verboseOutput: false
      
      # Experimental features (use with caution)
      experimentalPostfixCompletions: true
      experimentalWorkspaceModule: true
      experimentalTemplateSupport: false
      
    # Workspace capabilities
    capabilities:
      textDocument:
        definition: true
        references: true
        hover: true
        documentSymbol: true
        formatting: true
        rangeFormatting: true
        codeAction: true
        completion: true
        signatureHelp: true
        documentHighlight: true
        publishDiagnostics: true
        foldingRange: true
        selectionRange: true
        linkedEditingRange: true
        callHierarchy: true
        semanticTokens: true
        moniker: true
      workspace:
        symbol: true
        didChangeConfiguration: true
        didChangeWatchedFiles: true
        executeCommand: true
        applyEdit: true
        configuration: true
        workspaceFolders: true
        fileOperations: true

# Enhanced repository configurations
repositories:
  # Primary: Kubernetes - Latest stable version
  - name: "kubernetes-comprehensive"
    path: "./test-repositories/go/kubernetes"
    language: "go"
    description: "Kubernetes v1.33.3 - Comprehensive Go codebase testing"
    priority: "primary"
    setup:
      commands:
        - "go version"
        - "go env"
        - "go mod download"
        - "go mod verify"
        - "go build -v ./cmd/kubectl"
        - "go build -v ./cmd/kubelet"
        - "go list -m all | head -20"  # List dependencies
      build_cmd: "make quick-release"
      timeout: 20m
      environment:
        CGO_ENABLED: "0"
        GOOS: "linux"
        GOARCH: "amd64"
        KUBE_GIT_VERSION: "v1.33.3"
      validation:
        required_files: ["go.mod", "go.sum", "Makefile", "OWNERS"]
        required_dirs: ["cmd", "pkg", "staging", "vendor"]
        min_go_files: 5000
        
    test_cases:
      # Definition tests - Advanced patterns
      - id: "k8s_def_controller_interface_impl"
        name: "Kubernetes Controller Interface Implementation"
        method: "textDocument/definition"
        file: "pkg/controller/deployment/deployment_controller.go"
        position:
          line: 150
          character: 25
        expected:
          success: true
          definition:
            has_location: true
            file_pattern: "pkg/controller/"
            symbol_type: "func"
        tags: ["definition", "interface", "controller", "kubernetes"]
        timeout: 60s
        
      - id: "k8s_def_api_group_navigation"
        name: "Kubernetes API Group Cross-Package Navigation"
        method: "textDocument/definition"
        file: "pkg/apis/apps/v1/types.go"
        position:
          line: 45
          character: 15
        expected:
          success: true
          definition:
            has_location: true
            cross_package: true
        tags: ["definition", "api", "cross-package", "kubernetes"]
        timeout: 45s

      # References tests - High volume
      - id: "k8s_ref_pod_usage_comprehensive"
        name: "Kubernetes Pod Usage References"
        method: "textDocument/references"
        file: "pkg/apis/core/v1/types.go"
        position:
          line: 2800  # Pod struct
          character: 10
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 200
            max_count: 1000  # Prevent timeout on excessive results
            include_declaration: true
        tags: ["references", "high-volume", "pod", "kubernetes"]
        timeout: 90s
        
      - id: "k8s_ref_controller_pattern"
        name: "Kubernetes Controller Pattern References"
        method: "textDocument/references"
        file: "pkg/controller/controller_utils.go"
        position:
          line: 100
          character: 20
        params:
          includeDeclaration: false
        expected:
          success: true
          references:
            min_count: 15
            cross_package: true
        tags: ["references", "controller", "pattern", "kubernetes"]
        timeout: 75s

      # Hover tests - Detailed information
      - id: "k8s_hover_complex_interface"
        name: "Kubernetes Complex Interface Hover"
        method: "textDocument/hover"
        file: "pkg/kubelet/container/runtime.go"
        position:
          line: 80
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["interface", "Runtime", "container"]
            format: "markdown"
            detailed_info: true
        tags: ["hover", "interface", "detailed", "kubernetes"]
        timeout: 45s

      # Document symbols - Large files
      - id: "k8s_docsym_comprehensive_controller"
        name: "Kubernetes Controller Document Symbols"
        method: "textDocument/documentSymbol"
        file: "pkg/controller/deployment/deployment_controller.go"
        expected:
          success: true
          symbols:
            min_count: 30
            types: ["struct", "func", "var", "const", "interface"]
            hierarchical: true
        tags: ["symbols", "document", "comprehensive", "kubernetes"]
        timeout: 90s

      # Workspace symbols - Large scale search
      - id: "k8s_worksym_runtime_comprehensive"
        name: "Kubernetes Runtime Workspace Search"
        method: "workspace/symbol"
        params:
          query: "Runtime"
        expected:
          success: true
          symbols:
            min_count: 30
            max_count: 200  # Reasonable limit
            types: ["interface", "struct", "func"]
        tags: ["symbols", "workspace", "runtime", "kubernetes"]
        timeout: 120s

  # Secondary: Go Standard Library - Latest version
  - name: "golang-stdlib-comprehensive"  
    path: "./test-repositories/go/golang"
    language: "go"
    description: "Go 1.24.5 standard library and toolchain testing"
    priority: "secondary"
    setup:
      commands:
        - "cd src && go version"
        - "cd src && go env"
        - "cd src && go build std"
        - "cd src && go build -a std"
      build_cmd: "cd src && go build std"
      timeout: 25m
      environment:
        GOROOT_BOOTSTRAP: "$GOROOT"
        CGO_ENABLED: "1"
        GOOS: "linux"
        GOARCH: "amd64"
      validation:
        required_files: ["src/go.mod", "src/make.bash", "VERSION"]
        required_dirs: ["src", "bin", "pkg"]
        min_go_files: 3000
        
    test_cases:
      # Generic-specific tests
      - id: "go_def_generic_function_std"
        name: "Go Standard Library Generic Function"
        method: "textDocument/definition"
        file: "src/slices/slices.go"
        position:
          line: 50
          character: 10
        expected:
          success: true
          definition:
            has_location: true
            supports_generics: true
        tags: ["definition", "generics", "stdlib", "golang"]
        timeout: 45s
        
      - id: "go_hover_builtin_comprehensive_std"
        name: "Go Built-in Function Comprehensive Hover"
        method: "textDocument/hover"
        file: "src/builtin/builtin.go"
        position:
          line: 140
          character: 10
        expected:
          success: true
          hover:
            has_content: true
            contains: ["builtin", "make", "allocates"]
            comprehensive: true
        tags: ["hover", "builtin", "comprehensive", "golang"]
        timeout: 30s

      # Workspace symbols for standard library
      - id: "go_worksym_context_std"
        name: "Go Standard Library Context Search"
        method: "workspace/symbol"
        params:
          query: "Context"
        expected:
          success: true
          symbols:
            min_count: 15
            types: ["interface", "struct", "func"]
        tags: ["symbols", "workspace", "context", "golang"]
        timeout: 90s

  # Tertiary: Prometheus - Modern Go patterns
  - name: "prometheus-modern-patterns"
    path: "./test-repositories/go/prometheus"
    language: "go"
    description: "Prometheus v3.0.1 - Modern Go patterns and concurrent programming"
    priority: "tertiary"
    setup:
      commands:
        - "go version"
        - "go mod download"
        - "go mod verify"
        - "make build"
        - "make test-short"  # Quick validation
      build_cmd: "make build"
      timeout: 15m
      environment:
        CGO_ENABLED: "0"
        GOOS: "linux"
        GOARCH: "amd64"
      validation:
        required_files: ["go.mod", "go.sum", "Makefile"]
        required_dirs: ["cmd", "pkg", "web", "tsdb"]
        min_go_files: 800
        
    test_cases:
      # Concurrent patterns
      - id: "prom_def_context_usage"
        name: "Prometheus Context Usage Definition"
        method: "textDocument/definition"
        file: "scrape/scrape.go"
        position:
          line: 150
          character: 20
        expected:
          success: true
          definition:
            has_location: true
            context_aware: true
        tags: ["definition", "context", "concurrent", "prometheus"]
        timeout: 45s
        
      - id: "prom_ref_error_handling"
        name: "Prometheus Error Handling References"
        method: "textDocument/references"
        file: "util/strutil/strutil.go"
        position:
          line: 50
          character: 15
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 10
            error_patterns: true
        tags: ["references", "error", "handling", "prometheus"]
        timeout: 60s

# Advanced execution configuration
execution:
  max_concurrency: 3
  default_timeout: 90s
  retry_attempts: 2
  retry_delay: 5s
  fail_fast: false
  randomize_order: false
  keep_servers_alive: true
  warm_up_duration: "30s"
  
  # Memory management
  memory_limits:
    per_test: "2GB"
    total: "8GB"
    gopls_max: "1GB"
  
  # Progress reporting
  progress_reporting:
    interval: "15s"
    show_memory_usage: true
    show_timing: true

# Comprehensive validation settings
validation:
  strict_mode: false
  validate_types: true
  validate_positions: true
  validate_uris: true
  validate_ranges: true
  validate_symbols: true
  
  # Performance validation
  performance_thresholds:
    definition: "10s"
    references: "30s"
    hover: "5s"
    documentSymbol: "15s"
    workspaceSymbol: "45s"
    
  # Content validation
  content_validation:
    hover_min_length: 10
    symbol_min_count: 1
    reference_accuracy: 0.95
    definition_accuracy: 0.98

# Enhanced reporting configuration
reporting:
  formats: ["console", "json", "junit", "html"]
  output_dir: "test-results/go-comprehensive"
  verbose: true
  include_timing: true
  include_memory_stats: true
  save_details: true
  generate_coverage_report: true
  
  # Performance metrics
  performance_metrics:
    response_times: true
    memory_usage: true
    cpu_usage: true
    success_rates: true
    error_patterns: true
    
  # Failure analysis
  failure_analysis:
    capture_logs: true
    capture_screenshots: false
    save_server_state: true
    detailed_stack_traces: true

# Environment configuration
env:
  LSP_TEST_MODE: "comprehensive"
  LSP_TIMEOUT_MULTIPLIER: "2"
  LSP_LOG_LEVEL: "INFO"
  LSP_DEBUG_MODE: "false"
  GOMAXPROCS: "4"
  GOGC: "100"
  GOMEMLIMIT: "8GiB"
  
  # Go-specific environment
  GOROOT: "/usr/local/go"
  GOPATH: "/tmp/go-workspace"
  GOCACHE: "/tmp/go-build-cache"
  GOMODCACHE: "/tmp/go-mod-cache"
  GOPROXY: "https://proxy.golang.org,direct"
  GOSUMDB: "sum.golang.org"
  GONOSUMDB: ""
  GOPRIVATE: ""

# Cleanup and maintenance
cleanup:
  remove_temp_files: true
  preserve_logs_on_failure: true
  cleanup_timeout: 60s
  cache_management: true
  
  # Repository management
  repository_cleanup:
    remove_build_artifacts: true
    preserve_git_state: true
    cleanup_vendor_dirs: false

# Integration hooks
hooks:
  pre_test:
    - "echo 'Starting comprehensive Go LSP testing'"
    - "go version"
    - "gopls version"
    - "free -h"  # Check memory
    
  post_test:
    - "echo 'Go LSP testing completed'"
    - "du -sh test-results/"
    
  on_failure:
    - "echo 'Test failure detected'"
    - "ps aux | grep gopls"
    - "free -h"

# Custom test scenarios integration
scenario_files:
  - "./go_comprehensive_scenarios.yaml"
  - "./internal/testing/lsp/scenarios/go_scenarios.yaml"

# Quality gates
quality_gates:
  min_success_rate: 0.85
  max_failure_rate: 0.15
  max_avg_response_time: "30s"
  max_memory_usage: "6GB"
  min_test_coverage: 0.80