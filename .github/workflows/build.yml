name: Build & Quality Checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-quality:
    name: Build & Quality (${{ matrix.os }})
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'
        check-latest: true

    - name: Install dependencies
      run: go mod download

    - name: Run quality checks
      run: |
        echo "📋 Running code formatting..."
        make format
        
        echo "🔍 Running go vet..."
        make vet
        
        # Check if code is properly formatted - only check repository source files
        UNFORMATTED="$(find . -name '*.go' -not -path './.gomodcache/*' -not -path './.gocache/*' -not -path './vendor/*' -not -path './.git/*' -not -path './bin/*' | xargs -r gofmt -l)"
        if [ -n "$UNFORMATTED" ]; then
          echo "❌ Code is not formatted. Please run 'make format'"
          echo "$UNFORMATTED"
          exit 1
        fi
        
        echo "✅ Quality checks passed"

    - name: Build for current platform
      run: |
        echo "🔨 Building for current platform..."
        make local
        
        # Verify binary was created
        ls -la bin/
        file bin/lsp-gateway || true

    - name: Build for all platforms
      run: |
        echo "🌍 Building for all platforms..."
        make build
        
        echo "📦 Build artifacts:"
        ls -la bin/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: bin/
        retention-days: 7
