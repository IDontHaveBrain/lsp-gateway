name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'

    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Tag: $TAG, Version: $VERSION"

    - name: Build multi-platform binaries
      run: |
        echo "Building binaries for version ${{ steps.version.outputs.version }}"
        make build

    - name: Verify binaries
      run: |
        echo "Verifying built binaries:"
        ls -la bin/
        file bin/lsp-gateway-*


    - name: Delete existing release (if exists)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release delete ${{ steps.version.outputs.tag }} --yes --cleanup-tag || echo "Release ${{ steps.version.outputs.tag }} doesn't exist, continuing..."

    - name: Create Release with gh CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ steps.version.outputs.tag }} \
          --title "LSP Gateway ${{ steps.version.outputs.tag }}" \
          --generate-notes \
          ./bin/lsp-gateway-linux \
          ./bin/lsp-gateway-windows.exe \
          ./bin/lsp-gateway-macos \
          ./bin/lsp-gateway-macos-arm64 \
          ./config.yaml

    - name: Release Summary
      run: |
        echo "ðŸŽ‰ Release ${{ steps.version.outputs.tag }} created successfully!"
        echo ""
        echo "ðŸ“¦ Assets uploaded:"
        echo "  âœ… lsp-gateway-linux (Linux x64)"
        echo "  âœ… lsp-gateway-windows.exe (Windows x64)" 
        echo "  âœ… lsp-gateway-macos (macOS Intel)"
        echo "  âœ… lsp-gateway-macos-arm64 (macOS Apple Silicon)"
        echo "  âœ… config.yaml (Configuration template)"
        echo ""
        echo "ðŸ”— Release URL: https://github.com/IDontHaveBrain/lsp-gateway/releases/tag/${{ steps.version.outputs.tag }}"
        echo ""
        echo "ðŸ“‹ Post-release checklist:"
        echo "  â–¡ Update package.json version to ${{ steps.version.outputs.version }}"
        echo "  â–¡ Publish npm package: npm publish"
        echo "  â–¡ Update documentation if needed"
        echo "  â–¡ Announce release in community channels"
        echo ""
        echo "ðŸŽ¯ Installation command:"
        echo "  npm install -g lsp-gateway@${{ steps.version.outputs.version }}"
