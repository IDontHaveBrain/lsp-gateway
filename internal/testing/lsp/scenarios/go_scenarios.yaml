# Go Language Test Scenarios for LSP Gateway
# Real-world test cases using Kubernetes and Go standard library patterns

name: "Go LSP Scenarios"
description: "Comprehensive Go language server testing scenarios"
language: "go"

# Test scenarios for Go using kubernetes repository patterns
scenarios:
  # ===================
  # DEFINITION SCENARIOS
  # ===================
  
  - id: "go_def_interface_impl"
    name: "Go to Definition - Interface Implementation"
    description: "Navigate from interface method call to concrete implementation"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"
    position: 
      line: 850  # Example: ObjectMeta field usage
      character: 15
    expected:
      success: true
      definition:
        has_location: true
        file_pattern: "vendor/k8s.io/apimachinery/pkg/apis/meta/v1/types.go"
    tags: ["definition", "interface", "kubernetes"]
  
  - id: "go_def_cross_package"
    name: "Go to Definition - Cross Package Function"
    description: "Navigate to function definition in different package"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "cmd/kubelet/app/server.go"
    position:
      line: 200  # Example: NewKubeletServer call
      character: 10
    expected:
      success: true
      definition:
        has_location: true
        file_pattern: "cmd/kubelet/app/server.go"
    tags: ["definition", "cross-package", "function"]
    
  - id: "go_def_struct_field"
    name: "Go to Definition - Struct Field"
    description: "Navigate to struct field definition"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/controller/deployment/deployment_controller.go"
    position:
      line: 100  # Example: accessing deployment spec
      character: 25
    expected:
      success: true
      definition:
        has_location: true
    tags: ["definition", "struct", "field"]

  - id: "go_def_method_receiver"
    name: "Go to Definition - Method on Receiver"
    description: "Navigate from method call to method definition"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/kubelet/kubelet.go"
    position:
      line: 300
      character: 20
    expected:
      success: true
      definition:
        has_location: true
    tags: ["definition", "method", "receiver"]

  # ===================
  # REFERENCES SCENARIOS  
  # ===================
  
  - id: "go_ref_interface_usage"
    name: "Find References - Interface Usage"
    description: "Find all usages of a Kubernetes interface"
    method: "textDocument/references"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"
    position:
      line: 100  # Example: Pod interface
      character: 10
    params:
      includeDeclaration: true
    expected:
      success: true
      references:
        min_count: 20  # Kubernetes Pod is widely used
        include_declaration: true
    tags: ["references", "interface", "kubernetes"]

  - id: "go_ref_exported_function"
    name: "Find References - Exported Function"
    description: "Find all references to an exported function"
    method: "textDocument/references"
    repository: "golang"
    file: "src/fmt/print.go"
    position:
      line: 200  # Example: Printf function
      character: 10
    params:
      includeDeclaration: true
    expected:
      success: true
      references:
        min_count: 50  # Printf is heavily used
        include_declaration: true
    tags: ["references", "exported", "function"]

  - id: "go_ref_struct_field_access"
    name: "Find References - Struct Field Access"
    description: "Find all references to a struct field"
    method: "textDocument/references"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"
    position:
      line: 600  # Example: ObjectMeta.Name field
      character: 8
    params:
      includeDeclaration: false
    expected:
      success: true
      references:
        min_count: 10
        include_declaration: false
    tags: ["references", "struct", "field"]

  - id: "go_ref_method_implementation"
    name: "Find References - Method Implementation"
    description: "Find all references to method implementations"
    method: "textDocument/references"
    repository: "kubernetes"
    file: "pkg/controller/controller_utils.go"
    position:
      line: 50
      character: 15
    params:
      includeDeclaration: true
    expected:
      success: true
      references:
        min_count: 5
        include_declaration: true
    tags: ["references", "method", "implementation"]

  # ===================
  # HOVER SCENARIOS
  # ===================
  
  - id: "go_hover_builtin_function"
    name: "Hover - Built-in Function"
    description: "Get hover info for Go built-in function"
    method: "textDocument/hover"
    repository: "golang"
    file: "src/builtin/builtin.go"
    position:
      line: 120  # Example: make function
      character: 10
    expected:
      success: true
      hover:
        has_content: true
        contains: ["make", "allocates", "slice", "map", "chan"]
        format: "markdown"
    tags: ["hover", "builtin", "function"]

  - id: "go_hover_struct_type"
    name: "Hover - Struct Type Info"
    description: "Get hover information for struct type"
    method: "textDocument/hover"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"
    position:
      line: 800  # Example: Pod struct
      character: 10
    expected:
      success: true
      hover:
        has_content: true
        contains: ["Pod", "PodSpec", "ObjectMeta"]
        format: "markdown"
    tags: ["hover", "struct", "type"]

  - id: "go_hover_interface_method"
    name: "Hover - Interface Method"
    description: "Get hover info for interface method signature"
    method: "textDocument/hover"
    repository: "kubernetes"
    file: "pkg/kubelet/container/runtime.go"
    position:
      line: 100  # Example: Runtime interface method
      character: 20
    expected:
      success: true
      hover:
        has_content: true
        format: "markdown"
    tags: ["hover", "interface", "method"]

  - id: "go_hover_imported_package"
    name: "Hover - Imported Package"
    description: "Get hover info for imported package"
    method: "textDocument/hover"
    repository: "kubernetes"
    file: "cmd/kubelet/kubelet.go"
    position:
      line: 10  # Import statement
      character: 15
    expected:
      success: true
      hover:
        has_content: true
        format: "markdown"
    tags: ["hover", "import", "package"]

  # ===================
  # DOCUMENT SYMBOLS SCENARIOS
  # ===================
  
  - id: "go_docsym_controller_file"
    name: "Document Symbols - Kubernetes Controller"
    description: "Get all symbols from a Kubernetes controller file"
    method: "textDocument/documentSymbol"
    repository: "kubernetes"
    file: "pkg/controller/deployment/deployment_controller.go"
    position:
      line: 0
      character: 0
    expected:
      success: true
      symbols:
        min_count: 15  # Controller files have many structs and methods
        types: ["struct", "func", "var", "const"]
    tags: ["symbols", "document", "controller"]

  - id: "go_docsym_api_types"
    name: "Document Symbols - API Types"
    description: "Get symbols from Kubernetes API types file"
    method: "textDocument/documentSymbol"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"
    position:
      line: 0
      character: 0
    expected:
      success: true
      symbols:
        min_count: 50  # API types have many structs
        types: ["struct", "const", "var"]
    tags: ["symbols", "document", "api"]

  - id: "go_docsym_main_package"
    name: "Document Symbols - Main Package"
    description: "Get symbols from main package file"
    method: "textDocument/documentSymbol"
    repository: "kubernetes"
    file: "cmd/kubelet/kubelet.go"
    position:
      line: 0
      character: 0
    expected:
      success: true
      symbols:
        min_count: 5
        types: ["func", "var"]
    tags: ["symbols", "document", "main"]

  - id: "go_docsym_utility_package"
    name: "Document Symbols - Utility Package"
    description: "Get symbols from utility package"
    method: "textDocument/documentSymbol"
    repository: "kubernetes"
    file: "pkg/util/wait/wait.go"
    position:
      line: 0
      character: 0
    expected:
      success: true
      symbols:
        min_count: 10
        types: ["func", "struct", "var", "const"]
    tags: ["symbols", "document", "utility"]

  # ===================
  # WORKSPACE SYMBOLS SCENARIOS
  # ===================
  
  - id: "go_worksym_pod_search"
    name: "Workspace Symbol Search - Pod"
    description: "Search for Pod-related symbols across workspace"
    method: "workspace/symbol"
    repository: "kubernetes"
    query: "Pod"
    expected:
      success: true
      symbols:
        min_count: 30  # Pod is used extensively in Kubernetes
        types: ["struct", "func", "var"]
    tags: ["symbols", "workspace", "search"]

  - id: "go_worksym_controller_search"
    name: "Workspace Symbol Search - Controller"
    description: "Search for Controller symbols"
    method: "workspace/symbol"
    repository: "kubernetes"
    query: "Controller"
    expected:
      success: true
      symbols:
        min_count: 20
        types: ["struct", "func", "interface"]
    tags: ["symbols", "workspace", "controller"]

  - id: "go_worksym_interface_search"
    name: "Workspace Symbol Search - Interface"
    description: "Search for interface implementations"
    method: "workspace/symbol"
    repository: "kubernetes"
    query: "Runtime"
    expected:
      success: true
      symbols:
        min_count: 5
        types: ["interface", "struct", "func"]
    tags: ["symbols", "workspace", "interface"]

  - id: "go_worksym_exact_match"
    name: "Workspace Symbol Search - Exact Match"
    description: "Search for exact symbol match"
    method: "workspace/symbol"
    repository: "golang"
    query: "Printf"
    expected:
      success: true
      symbols:
        min_count: 1
        types: ["func"]
    tags: ["symbols", "workspace", "exact"]

  # ===================
  # COMPLEX SCENARIOS
  # ===================
  
  - id: "go_complex_generic_usage"
    name: "Complex - Generic Type Usage"
    description: "Test LSP with Go generics (if supported)"
    method: "textDocument/definition"
    repository: "golang"
    file: "src/slices/slices.go"
    position:
      line: 50  # Generic function definition
      character: 10
    expected:
      success: true
      definition:
        has_location: true
    tags: ["complex", "generics", "go1.18+"]

  - id: "go_complex_embedded_interface"
    name: "Complex - Embedded Interface"
    description: "Navigate through embedded interface hierarchy"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/kubelet/container/runtime.go"
    position:
      line: 80  # Embedded interface
      character: 15
    expected:
      success: true
      definition:
        has_location: true
    tags: ["complex", "embedded", "interface"]

  - id: "go_complex_vendor_dependency"
    name: "Complex - Vendor Dependency"
    description: "Navigate to vendored dependency"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/controller/deployment/deployment_controller.go"
    position:
      line: 50  # Using vendored library
      character: 20
    expected:
      success: true
      definition:
        has_location: true
        file_pattern: "vendor/"
    tags: ["complex", "vendor", "dependency"]

# Performance test cases
performance_tests:
  - id: "go_perf_large_file"
    name: "Performance - Large File Navigation"
    description: "Test performance on large Go files"
    method: "textDocument/definition"
    repository: "kubernetes"
    file: "pkg/api/v1/types.go"  # Large file with many types
    position:
      line: 1000
      character: 10
    timeout: "10s"
    tags: ["performance", "large-file"]

  - id: "go_perf_workspace_symbols"
    name: "Performance - Large Workspace Symbol Search"
    description: "Test workspace symbol search performance"
    method: "workspace/symbol"
    repository: "kubernetes"
    query: "k"  # Single character to get many results
    timeout: "15s"
    expected:
      success: true
      symbols:
        min_count: 100
    tags: ["performance", "workspace", "large-result"]

# Test repository configurations
test_repositories:
  kubernetes:
    path: "./test-repositories/go/kubernetes"
    setup:
      commands:
        - "go mod download"
        - "go build ./..."
      timeout: "5m"
  
  golang:
    path: "./test-repositories/go/golang"
    setup:
      commands:
        - "cd src && go build std"
      timeout: "10m"