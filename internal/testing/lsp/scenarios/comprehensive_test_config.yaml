# Comprehensive LSP Test Configuration
# This configuration demonstrates how to run comprehensive scenarios across all languages

name: "Comprehensive LSP Scenario Testing"
description: "Complete testing suite for all supported languages using real-world scenarios"
timeout: 30m
parallel: true
tags: ["comprehensive", "scenarios", "real-world"]

# LSP server configurations for all languages
servers:
  gopls:
    name: "gopls"
    language: "go"
    command: "gopls"
    transport: "stdio"
    start_timeout: 15s
    shutdown_timeout: 10s
    pre_warmup: true
    initialize_delay: 1s
    init_options:
      usePlaceholders: true
      completeUnimported: true
      staticcheck: true
      
  pylsp:
    name: "python-lsp-server"
    language: "python"
    command: "pylsp"
    transport: "stdio"
    start_timeout: 20s
    shutdown_timeout: 10s
    pre_warmup: true
    initialize_delay: 2s
    init_options:
      plugins:
        flake8:
          enabled: true
        mypy:
          enabled: true
        pylsp_mypy:
          enabled: true
          
  tsserver:
    name: "typescript-language-server"
    language: "typescript"
    command: "typescript-language-server"
    args: ["--stdio"]
    transport: "stdio"
    start_timeout: 15s
    shutdown_timeout: 10s
    pre_warmup: true
    initialize_delay: 1s
    init_options:
      preferences:
        includeInlayParameterNameHints: "all"
        includeInlayPropertyDeclarationTypeHints: true
        
  jdtls:
    name: "jdtls"
    language: "java"
    command: "jdtls"
    transport: "stdio"
    start_timeout: 45s
    shutdown_timeout: 15s
    pre_warmup: true
    initialize_delay: 5s
    init_options:
      settings:
        java:
          compile:
            nullAnalysis:
              mode: "automatic"
          completion:
            enabled: true
            maxResults: 50

# Test repositories using scenario test data and real repositories
repositories:
  # Go repositories
  - name: "go-scenario-testdata"
    path: "./internal/testing/lsp/scenarios/testdata/go"
    language: "go"
    description: "Go scenario test data with Kubernetes patterns"
    setup:
      commands:
        - "go mod init lsp-test-scenarios"
        - "go mod tidy"
      timeout: 2m
    test_cases:
      - id: "go_scenario_definition_controller"
        name: "Go Definition - Controller Method"
        method: "textDocument/definition"
        file: "sample_controller.go"
        position:
          line: 19    # NewDeploymentController function
          character: 10
        expected:
          success: true
          definition:
            has_location: true
        tags: ["go", "definition", "scenario"]
        
      - id: "go_scenario_references_interface"
        name: "Go References - Interface Usage"
        method: "textDocument/references"
        file: "sample_controller.go"
        position:
          line: 133   # DeploymentManager interface
          character: 10
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 2
            include_declaration: true
        tags: ["go", "references", "interface", "scenario"]
        
      - id: "go_scenario_hover_method"
        name: "Go Hover - Method Documentation"
        method: "textDocument/hover"
        file: "sample_controller.go"
        position:
          line: 25    # CreateDeployment method
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["CreateDeployment", "deployment", "specifications"]
        tags: ["go", "hover", "method", "scenario"]

  # Python repositories
  - name: "python-scenario-testdata"
    path: "./internal/testing/lsp/scenarios/testdata/python"
    language: "python"
    description: "Python scenario test data with Django patterns"
    setup:
      commands:
        - "python -m venv venv"
        - "source venv/bin/activate"
        - "pip install django"
      timeout: 5m
    test_cases:
      - id: "py_scenario_definition_model_field"
        name: "Python Definition - Django Model Field"
        method: "textDocument/definition"
        file: "sample_models.py"
        position:
          line: 30    # User model bio field
          character: 10
        expected:
          success: true
          definition:
            has_location: true
        tags: ["python", "definition", "django", "model", "scenario"]
        
      - id: "py_scenario_references_model_class"
        name: "Python References - Django Model Class"
        method: "textDocument/references"
        file: "sample_models.py"
        position:
          line: 25    # User class definition
          character: 10
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 5
            include_declaration: true
        tags: ["python", "references", "django", "model", "scenario"]
        
      - id: "py_scenario_hover_decorator"
        name: "Python Hover - Django Decorator"
        method: "textDocument/hover"
        file: "sample_models.py"
        position:
          line: 390   # @receiver decorator
          character: 5
        expected:
          success: true
          hover:
            has_content: true
            contains: ["receiver", "signal", "django"]
        tags: ["python", "hover", "decorator", "django", "scenario"]

  # TypeScript repositories  
  - name: "typescript-scenario-testdata"
    path: "./internal/testing/lsp/scenarios/testdata/typescript"
    language: "typescript"
    description: "TypeScript scenario test data with VSCode patterns"
    setup:
      commands:
        - "npm init -y"
        - "npm install --save-dev typescript @types/vscode"
        - "npx tsc --init"
      timeout: 3m
    test_cases:
      - id: "ts_scenario_definition_interface"
        name: "TypeScript Definition - Interface Method"
        method: "textDocument/definition"
        file: "sample_editor_service.ts"
        position:
          line: 15    # IEditorService interface method
          character: 20
        expected:
          success: true
          definition:
            has_location: true
        tags: ["typescript", "definition", "interface", "vscode", "scenario"]
        
      - id: "ts_scenario_references_generic_type"
        name: "TypeScript References - Generic Type"
        method: "textDocument/references"
        file: "sample_editor_service.ts"
        position:
          line: 120   # Generic type parameter T
          character: 25
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 3
            include_declaration: true
        tags: ["typescript", "references", "generic", "type", "scenario"]
        
      - id: "ts_scenario_hover_class_method"
        name: "TypeScript Hover - Class Method with JSDoc"
        method: "textDocument/hover"
        file: "sample_editor_service.ts"
        position:
          line: 180   # openTextDocument method
          character: 15
        expected:
          success: true
          hover:
            has_content: true
            contains: ["openTextDocument", "Promise", "ITextDocument"]
            format: "markdown"
        tags: ["typescript", "hover", "class", "method", "jsdoc", "scenario"]

  # Java repositories
  - name: "java-scenario-testdata"
    path: "./internal/testing/lsp/scenarios/testdata/java"
    language: "java"
    description: "Java scenario test data with Spring Boot patterns"
    setup:
      commands:
        - "mkdir -p src/main/java/com/example/lsp"
        - "mkdir -p src/main/resources"
        - "echo 'dependencies { implementation \"org.springframework.boot:spring-boot-starter-web\" }' > build.gradle"
      timeout: 3m
    test_cases:
      - id: "java_scenario_definition_annotation"
        name: "Java Definition - Spring Annotation"
        method: "textDocument/definition"
        file: "SampleController.java"
        position:
          line: 40    # @RestController annotation
          character: 5
        expected:
          success: true
          definition:
            has_location: true
        tags: ["java", "definition", "spring", "annotation", "scenario"]
        
      - id: "java_scenario_references_service_method"
        name: "Java References - Service Method Call"
        method: "textDocument/references"
        file: "SampleController.java"
        position:
          line: 110   # productService.findProductsWithFilter
          character: 30
        params:
          includeDeclaration: true
        expected:
          success: true
          references:
            min_count: 1
            include_declaration: true
        tags: ["java", "references", "service", "method", "scenario"]
        
      - id: "java_scenario_hover_generic_method"
        name: "Java Hover - Generic Method Signature"
        method: "textDocument/hover"
        file: "SampleController.java"
        position:
          line: 150   # ResponseEntity<ProductDto> method signature
          character: 30
        expected:
          success: true
          hover:
            has_content: true
            contains: ["ResponseEntity", "ProductDto", "Spring"]
            format: "markdown"
        tags: ["java", "hover", "generic", "spring", "scenario"]

  # Real-world repository integration (requires cloned repos)
  - name: "kubernetes-integration"
    path: "./test-repositories/go/kubernetes"
    language: "go"
    description: "Integration with actual Kubernetes repository"
    skip: true  # Skip by default unless repos are cloned
    setup:
      commands:
        - "go mod download"
        - "go build ./cmd/kubelet"
      timeout: 10m
    test_cases:
      - id: "k8s_real_definition_controller"
        name: "Kubernetes Real - Controller Definition"
        method: "textDocument/definition"
        file: "pkg/controller/deployment/deployment_controller.go"
        position:
          line: 100
          character: 15
        expected:
          success: true
          definition:
            has_location: true
        tags: ["go", "kubernetes", "real-world", "integration"]
        timeout: 45s

# Test execution configuration
execution:
  max_concurrency: 2  # Limited for resource management
  default_timeout: 60s
  retry_attempts: 3
  retry_delay: 2s
  fail_fast: false
  randomize_order: false
  keep_servers_alive: true

# Validation configuration
validation:
  strict_mode: false
  validate_types: true
  validate_positions: true
  validate_uris: true

# Reporting configuration
reporting:
  formats: ["console", "json", "junit"]
  output_dir: "test-results/comprehensive-scenarios"
  verbose: true
  include_timing: true
  save_details: true

# Environment variables for testing
env:
  LSP_TEST_MODE: "comprehensive"
  LSP_TIMEOUT_MULTIPLIER: "2"
  LSP_LOG_LEVEL: "INFO"
  JAVA_HOME: "/usr/lib/jvm/java-17-openjdk"
  GOROOT: "/usr/local/go"
  NODE_PATH: "/usr/local/lib/node_modules"

# Scenario-specific configuration sections

# Performance testing scenarios (separate execution)
performance_scenarios:
  - repository: "go-scenario-testdata"
    test_cases:
      - id: "go_perf_large_file_navigation"
        name: "Go Performance - Large File Navigation"
        method: "textDocument/definition"
        file: "sample_controller.go"
        position:
          line: 200
          character: 10
        timeout: 10s
        expected:
          success: true
        tags: ["go", "performance", "scenario"]

  - repository: "typescript-scenario-testdata"  
    test_cases:
      - id: "ts_perf_complex_types"
        name: "TypeScript Performance - Complex Type Navigation"
        method: "textDocument/hover"
        file: "sample_editor_service.ts"
        position:
          line: 300
          character: 20
        timeout: 15s
        expected:
          success: true
        tags: ["typescript", "performance", "scenario"]

# Integration testing scenarios
integration_scenarios:
  - name: "cross-language-workspace"
    description: "Test LSP servers working with multi-language workspaces"
    repositories: ["go-scenario-testdata", "python-scenario-testdata", "typescript-scenario-testdata", "java-scenario-testdata"]
    test_cases:
      - id: "multi_lang_workspace_symbols"
        name: "Multi-language Workspace Symbol Search"
        method: "workspace/symbol"
        query: "Controller"
        expected:
          success: true
          symbols:
            min_count: 4  # Should find controllers in multiple languages
        tags: ["integration", "multi-language", "workspace"]

# Custom validation rules for scenarios
scenario_validation_rules:
  - rule: "definition_file_patterns"
    description: "Validate definition results match expected file patterns"
    applicable_methods: ["textDocument/definition"]
    enabled: true
    
  - rule: "performance_thresholds"
    description: "Validate performance scenarios meet timing requirements"
    applicable_tags: ["performance"]
    enabled: true
    thresholds:
      definition: "5s"
      references: "10s"
      hover: "3s"
      symbols: "15s"
      
  - rule: "real_world_accuracy"
    description: "Validate real-world scenarios produce expected results"
    applicable_tags: ["real-world", "integration"]
    enabled: true

# Test data management
test_data:
  auto_generate_missing: true
  update_on_language_server_update: false
  preserve_custom_modifications: true
  
# Cleanup configuration
cleanup:
  remove_temp_files: true
  preserve_logs_on_failure: true
  cleanup_timeout: 30s