
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "lsp-gateway/src/internal/installer"


)

var tests = []testing.InternalTest{

	{"TestNewBaseInstaller", _test.TestNewBaseInstaller},

	{"TestBaseInstallerIsInstalled", _test.TestBaseInstallerIsInstalled},

	{"TestBaseInstallerGetVersion", _test.TestBaseInstallerGetVersion},

	{"TestBaseInstallerValidateInstallation", _test.TestBaseInstallerValidateInstallation},

	{"TestBaseInstallerRunCommand", _test.TestBaseInstallerRunCommand},

	{"TestBaseInstallerRunCommandWithOutput", _test.TestBaseInstallerRunCommandWithOutput},

	{"TestBaseInstallerInstallWithPackageManager", _test.TestBaseInstallerInstallWithPackageManager},

	{"TestBaseInstallerCreateInstallDirectory", _test.TestBaseInstallerCreateInstallDirectory},

	{"TestBaseInstallerGetInstallPath", _test.TestBaseInstallerGetInstallPath},

	{"TestBaseInstallerDownloadFile", _test.TestBaseInstallerDownloadFile},

	{"TestBaseInstallerExtractArchive", _test.TestBaseInstallerExtractArchive},

	{"TestInstallOptions", _test.TestInstallOptions},

	{"TestPlatformInfo", _test.TestPlatformInfo},

	{"TestValidationMethods", _test.TestValidationMethods},

	{"TestPackageManagerHelpers", _test.TestPackageManagerHelpers},

	{"TestCreateInstallManager", _test.TestCreateInstallManager},

	{"TestRegisterAllInstallers", _test.TestRegisterAllInstallers},

	{"TestRegisterAllInstallers_SharedTypeScriptInstaller", _test.TestRegisterAllInstallers_SharedTypeScriptInstaller},

	{"TestGetDefaultInstallManager", _test.TestGetDefaultInstallManager},

	{"TestFactoryCreateSimpleInstaller", _test.TestFactoryCreateSimpleInstaller},

	{"TestFactoryConsistency", _test.TestFactoryConsistency},

	{"TestFactoryPlatformHandling", _test.TestFactoryPlatformHandling},

	{"TestFactoryWithCustomConfig", _test.TestFactoryWithCustomConfig},

	{"TestFactoryErrorScenarios", _test.TestFactoryErrorScenarios},

	{"TestFactoryLanguageMapping", _test.TestFactoryLanguageMapping},

	{"TestFactoryRegistrationCompleteness", _test.TestFactoryRegistrationCompleteness},

	{"TestNewGenericInstaller", _test.TestNewGenericInstaller},

	{"TestGenericInstallerPackageConfigs", _test.TestGenericInstallerPackageConfigs},

	{"TestGenericInstallerInstall", _test.TestGenericInstallerInstall},

	{"TestGenericInstallerInstallVersionHandling", _test.TestGenericInstallerInstallVersionHandling},

	{"TestGenericInstallerInstallMultiplePackages", _test.TestGenericInstallerInstallMultiplePackages},

	{"TestGenericInstallerUninstall", _test.TestGenericInstallerUninstall},

	{"TestGenericInstallerValidateInstallation", _test.TestGenericInstallerValidateInstallation},

	{"TestGenericInstallerPackageManagerCommandGeneration", _test.TestGenericInstallerPackageManagerCommandGeneration},

	{"TestGenericInstallerErrorScenarios", _test.TestGenericInstallerErrorScenarios},

	{"TestPackageConfigStructure", _test.TestPackageConfigStructure},

	{"TestGenericInstallerStructureIntegrity", _test.TestGenericInstallerStructureIntegrity},

	{"TestGenericInstallerPackageConfigConsistency", _test.TestGenericInstallerPackageConfigConsistency},

	{"TestInstallManager_InstallLanguage_Integration", _test.TestInstallManager_InstallLanguage_Integration},

	{"TestInstallManager_InstallAll_ErrorAggregation", _test.TestInstallManager_InstallAll_ErrorAggregation},

	{"TestInstallManager_ConcurrentInstallation", _test.TestInstallManager_ConcurrentInstallation},

	{"TestInstallManager_ContextCancellation", _test.TestInstallManager_ContextCancellation},

	{"TestConfigUpdater_Integration", _test.TestConfigUpdater_Integration},

	{"TestPlatformIntegration_WithInstaller", _test.TestPlatformIntegration_WithInstaller},

	{"TestErrorPropagation_CrossComponent", _test.TestErrorPropagation_CrossComponent},

	{"TestInstallation_CleanupOnFailure", _test.TestInstallation_CleanupOnFailure},

	{"TestInstallOptions_Behavior", _test.TestInstallOptions_Behavior},

	{"TestNewJavaInstaller", _test.TestNewJavaInstaller},

	{"TestJavaInstallerInstall", _test.TestJavaInstallerInstall},

	{"TestJavaInstallerInstallJDK", _test.TestJavaInstallerInstallJDK},

	{"TestJavaInstallerInstallJDTLS", _test.TestJavaInstallerInstallJDTLS},

	{"TestJavaInstallerCreateJDTLSWrapper", _test.TestJavaInstallerCreateJDTLSWrapper},

	{"TestJavaInstallerIsInstalled", _test.TestJavaInstallerIsInstalled},

	{"TestJavaInstallerGetVersion", _test.TestJavaInstallerGetVersion},

	{"TestJavaInstallerValidateInstallation", _test.TestJavaInstallerValidateInstallation},

	{"TestJavaInstaller_IsInstalled_FallbackManual", _test.TestJavaInstaller_IsInstalled_FallbackManual},

	{"TestJavaInstallerUninstall", _test.TestJavaInstallerUninstall},

	{"TestJavaInstallerGetServerConfig", _test.TestJavaInstallerGetServerConfig},

	{"TestJavaInstallerWrapperContentGeneration", _test.TestJavaInstallerWrapperContentGeneration},

	{"TestJavaInstallerWithCustomInstallPath", _test.TestJavaInstallerWithCustomInstallPath},

	{"TestJavaInstallerErrorScenarios", _test.TestJavaInstallerErrorScenarios},

	{"TestNewLSPInstallManager", _test.TestNewLSPInstallManager},

	{"TestRegisterInstaller", _test.TestRegisterInstaller},

	{"TestGetInstaller", _test.TestGetInstaller},

	{"TestInstallLanguage", _test.TestInstallLanguage},

	{"TestInstallLanguageNonExistentLanguage", _test.TestInstallLanguageNonExistentLanguage},

	{"TestInstallAll", _test.TestInstallAll},

	{"TestInstallAllNoInstallers", _test.TestInstallAllNoInstallers},

	{"TestInstallAllWithForce", _test.TestInstallAllWithForce},

	{"TestGetStatus", _test.TestGetStatus},

	{"TestGetSupportedLanguages", _test.TestGetSupportedLanguages},

	{"TestConcurrentOperations", _test.TestConcurrentOperations},

	{"TestContextCancellation", _test.TestContextCancellation},

	{"TestInstallAllContextCancellation", _test.TestInstallAllContextCancellation},

	{"TestInstallLanguageConcurrentSafety", _test.TestInstallLanguageConcurrentSafety},

	{"TestErrorAggregation", _test.TestErrorAggregation},

	{"TestLSPPlatformInfo_GetPlatform", _test.TestLSPPlatformInfo_GetPlatform},

	{"TestLSPPlatformInfo_GetArch", _test.TestLSPPlatformInfo_GetArch},

	{"TestLSPPlatformInfo_GetPlatformString", _test.TestLSPPlatformInfo_GetPlatformString},

	{"TestLSPPlatformInfo_IsSupported", _test.TestLSPPlatformInfo_IsSupported},

	{"TestLSPPlatformInfo_GetJavaDownloadURL", _test.TestLSPPlatformInfo_GetJavaDownloadURL},

	{"TestLSPPlatformInfo_GetNodeInstallCommand", _test.TestLSPPlatformInfo_GetNodeInstallCommand},

	{"TestLSPPlatformInfo_CurrentPlatformIntegration", _test.TestLSPPlatformInfo_CurrentPlatformIntegration},

	{"TestPlatformInfo_EdgeCases", _test.TestPlatformInfo_EdgeCases},

	{"TestPlatformInfo_JavaDownloadErrorMessages", _test.TestPlatformInfo_JavaDownloadErrorMessages},

	{"TestPlatformInfo_ArchitectureNormalization", _test.TestPlatformInfo_ArchitectureNormalization},

	{"TestPythonInstallerPyrightSupport", _test.TestPythonInstallerPyrightSupport},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkJavaInstallerWrapperCreation", _test.BenchmarkJavaInstallerWrapperCreation},

	{"BenchmarkJavaInstallerIsInstalled", _test.BenchmarkJavaInstallerIsInstalled},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "lsp-gateway/src/internal/installer"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

