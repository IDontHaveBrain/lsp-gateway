
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "lsp-gateway/src/server"


)

var tests = []testing.InternalTest{

	{"TestNewHTTPGateway", _test.TestNewHTTPGateway},

	{"TestHTTPGateway_BasicProperties", _test.TestHTTPGateway_BasicProperties},

	{"TestHTTPGateway_LSPOnlyMode", _test.TestHTTPGateway_LSPOnlyMode},

	{"TestHTTPGateway_handleJSONRPC_ProtocolValidation", _test.TestHTTPGateway_handleJSONRPC_ProtocolValidation},

	{"TestHTTPGateway_handleHealth_CacheLogic", _test.TestHTTPGateway_handleHealth_CacheLogic},

	{"TestHTTPGateway_handleCacheStats", _test.TestHTTPGateway_handleCacheStats},

	{"TestHTTPGateway_handleCacheHealth", _test.TestHTTPGateway_handleCacheHealth},

	{"TestHTTPGateway_handleCacheClear", _test.TestHTTPGateway_handleCacheClear},

	{"TestHTTPGateway_determineCacheStatus", _test.TestHTTPGateway_determineCacheStatus},

	{"TestHTTPGateway_addCacheHeaders", _test.TestHTTPGateway_addCacheHeaders},

	{"TestHTTPGateway_addCacheHeaders_NilMetrics", _test.TestHTTPGateway_addCacheHeaders_NilMetrics},

	{"TestHTTPGateway_handleLanguages", _test.TestHTTPGateway_handleLanguages},

	{"TestHTTPGateway_ErrorResponseFormatting", _test.TestHTTPGateway_ErrorResponseFormatting},

	{"TestLSPManager_Constructor", _test.TestLSPManager_Constructor},

	{"TestLSPManager_ProcessRequest_NilCacheHandling", _test.TestLSPManager_ProcessRequest_NilCacheHandling},

	{"TestLSPManager_Start_Basic", _test.TestLSPManager_Start_Basic},

	{"TestLSPManager_Stop_Basic", _test.TestLSPManager_Stop_Basic},

	{"TestLSPManager_Stop_WithErrors", _test.TestLSPManager_Stop_WithErrors},

	{"TestLSPManager_CheckServerAvailability", _test.TestLSPManager_CheckServerAvailability},

	{"TestLSPManager_GetClientStatus", _test.TestLSPManager_GetClientStatus},

	{"TestLSPManager_GetClient", _test.TestLSPManager_GetClient},

	{"TestLSPManager_GetConfiguredServers", _test.TestLSPManager_GetConfiguredServers},

	{"TestLSPManager_DetectPrimaryLanguage", _test.TestLSPManager_DetectPrimaryLanguage},

	{"TestLSPManager_ConcurrentAccess", _test.TestLSPManager_ConcurrentAccess},

	{"TestIsNoViewsRPCError", _test.TestIsNoViewsRPCError},

	{"TestLSPManager_CacheIntegration", _test.TestLSPManager_CacheIntegration},

	{"TestLSPManager_ProcessRequest_UnsupportedFileType", _test.TestLSPManager_ProcessRequest_UnsupportedFileType},

	{"TestLSPManager_ProcessRequest_WorkspaceSymbol", _test.TestLSPManager_ProcessRequest_WorkspaceSymbol},

	{"TestDelegateToolCall_ValidFindSymbols", _test.TestDelegateToolCall_ValidFindSymbols},

	{"TestDelegateToolCall_ValidFindReferences", _test.TestDelegateToolCall_ValidFindReferences},

	{"TestDelegateToolCall_InvalidParams", _test.TestDelegateToolCall_InvalidParams},

	{"TestDelegateToolCall_UnknownTool", _test.TestDelegateToolCall_UnknownTool},

	{"TestHandleFindSymbols_InvalidParameters", _test.TestHandleFindSymbols_InvalidParameters},

	{"TestHandleFindSymbols_ValidParametersStructure", _test.TestHandleFindSymbols_ValidParametersStructure},

	{"TestHandleFindSymbolReferences_InvalidParameters", _test.TestHandleFindSymbolReferences_InvalidParameters},

	{"TestHandleFindSymbolReferences_ValidParametersStructure", _test.TestHandleFindSymbolReferences_ValidParametersStructure},

	{"TestHandleFindSymbolReferences_OptionalParameters", _test.TestHandleFindSymbolReferences_OptionalParameters},

	{"TestMCPResponseFormatCompliance", _test.TestMCPResponseFormatCompliance},

	{"TestMCPErrorResponseFormatCompliance", _test.TestMCPErrorResponseFormatCompliance},

	{"TestDelegateToolCall_NilRequest", _test.TestDelegateToolCall_NilRequest},

	{"TestContext_Timeout_Handling", _test.TestContext_Timeout_Handling},

	{"TestFullToolFlow_FindSymbols", _test.TestFullToolFlow_FindSymbols},

	{"TestFullToolFlow_FindReferences", _test.TestFullToolFlow_FindReferences},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "lsp-gateway/src/server"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

