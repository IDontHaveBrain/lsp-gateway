{
  "isIncomplete": false,
  "items": [
    {
      "label": "GET",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "GET is a shortcut for router.Handle(\"GET\", path, handle)"
      },
      "insertText": "GET",
      "insertTextFormat": 1
    },
    {
      "label": "POST", 
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "POST is a shortcut for router.Handle(\"POST\", path, handle)"
      },
      "insertText": "POST",
      "insertTextFormat": 1
    },
    {
      "label": "PUT",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown", 
        "value": "PUT is a shortcut for router.Handle(\"PUT\", path, handle)"
      },
      "insertText": "PUT",
      "insertTextFormat": 1
    },
    {
      "label": "DELETE",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "DELETE is a shortcut for router.Handle(\"DELETE\", path, handle)"
      },
      "insertText": "DELETE", 
      "insertTextFormat": 1
    },
    {
      "label": "PATCH",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "PATCH is a shortcut for router.Handle(\"PATCH\", path, handle)"
      },
      "insertText": "PATCH",
      "insertTextFormat": 1
    },
    {
      "label": "HEAD",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes", 
      "documentation": {
        "kind": "markdown",
        "value": "HEAD is a shortcut for router.Handle(\"HEAD\", path, handle)"
      },
      "insertText": "HEAD",
      "insertTextFormat": 1
    },
    {
      "label": "OPTIONS",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "OPTIONS is a shortcut for router.Handle(\"OPTIONS\", path, handle)"
      },
      "insertText": "OPTIONS",
      "insertTextFormat": 1
    },
    {
      "label": "Use",
      "kind": 3,
      "detail": "func(...HandlerFunc) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "Use attaches a global middleware to the router. ie. the middleware attached though Use() will be included in the handlers chain for every single request."
      },
      "insertText": "Use",
      "insertTextFormat": 1
    },
    {
      "label": "Group",
      "kind": 3,
      "detail": "func(relativePath string, handlers ...HandlerFunc) *RouterGroup",
      "documentation": {
        "kind": "markdown",
        "value": "Group creates a new router group. You should add all the routes that have common middlwares or the same path prefix."
      },
      "insertText": "Group",
      "insertTextFormat": 1
    },
    {
      "label": "Static",
      "kind": 3,
      "detail": "func(relativePath, root string) IRoutes",
      "documentation": {
        "kind": "markdown",
        "value": "Static serves files from the given file system root. Internally a http.FileServer is used, therefore http.NotFound is used instead"
      },
      "insertText": "Static",
      "insertTextFormat": 1
    }
  ]
}