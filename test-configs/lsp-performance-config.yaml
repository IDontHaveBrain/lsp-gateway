# LSP Performance Benchmark Configuration
# This file defines performance targets and thresholds for LSP validation benchmarks

# LSP Server Configuration
servers:
  - name: "go-lsp"
    languages: ["go"]
    command: "gopls"
    transport: "stdio"
    timeout: 30s
  - name: "python-lsp"
    languages: ["python"]
    command: "python"
    args: ["-m", "pylsp"]
    transport: "stdio"
    timeout: 30s
  - name: "typescript-lsp"
    languages: ["typescript", "javascript"]
    command: "typescript-language-server"
    args: ["--stdio"]
    transport: "stdio"
    timeout: 30s

# Performance Thresholds
performance:
  # Latency thresholds for each LSP method (in milliseconds)
  latency_thresholds:
    definition:
      p50: 50
      p95: 100
      p99: 200
      max: 500
    references:
      p50: 100
      p95: 200
      p99: 500
      max: 1000
    hover:
      p50: 30
      p95: 50
      p99: 100
      max: 200
    document_symbol:
      p50: 100
      p95: 300
      p99: 500
      max: 1000
    workspace_symbol:
      p50: 200
      p95: 500
      p99: 1000
      max: 2000

  # Throughput thresholds
  throughput_thresholds:
    min_requests_per_second: 10.0
    max_error_rate: 0.05  # 5%

  # Memory usage thresholds
  memory_thresholds:
    max_alloc_per_request: 1048576  # 1MB in bytes
    max_memory_growth: 20.0         # 20% growth
    max_gc_pause: 10                # 10ms

# Benchmark Configuration
benchmark:
  warmup_iterations: 100
  benchmark_duration: 30s
  concurrency_levels: [1, 5, 10, 20, 50]
  sampling_rate: 100ms

# Test Repositories
repositories:
  - name: "go-sample"
    path: "./test-data"
    language: "go"
    description: "Sample Go project for LSP performance testing"
    test_cases:
      - id: "go_definition_perf"
        name: "Go definition performance test"
        method: "textDocument/definition"
        file: "sample.go"
        position:
          line: 14
          character: 9
        expected:
          success: true
          definition:
            has_location: true
      
      - id: "go_references_perf"
        name: "Go references performance test"
        method: "textDocument/references"
        file: "sample.go"
        position:
          line: 14
          character: 9
        expected:
          success: true
          references:
            min_count: 1
      
      - id: "go_hover_perf"
        name: "Go hover performance test"
        method: "textDocument/hover"
        file: "sample.go"
        position:
          line: 14
          character: 9
        expected:
          success: true
          hover:
            has_content: true
            contains: ["func", "TestFunction"]
      
      - id: "go_document_symbol_perf"
        name: "Go document symbol performance test"
        method: "textDocument/documentSymbol"
        file: "sample.go"
        expected:
          success: true
          document_symbol:
            min_count: 1
      
      - id: "go_workspace_symbol_perf"
        name: "Go workspace symbol performance test"
        method: "workspace/symbol"
        query: "TestFunction"
        expected:
          success: true
          workspace_symbol:
            min_count: 1

# Validation Configuration
validation:
  validate_uris: true
  validate_positions: true
  strict_mode: false

# Reporting Configuration
reporting:
  output_dir: "benchmark-results"
  save_details: true
  verbose: false
  generate_html: true
  generate_csv: true
  enable_regression_detection: true

# Regression Detection
regression:
  enabled: true
  history_file: "benchmark-history.json"
  thresholds:
    throughput_regression: 0.20    # 20% decrease
    latency_regression: 0.50       # 50% increase
    memory_regression: 0.30        # 30% increase
  alert_severity:
    minor: 0.10   # 10% change
    major: 0.25   # 25% change
    severe: 0.50  # 50% change